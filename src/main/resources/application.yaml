management:
  endpoints:
    web:
      exposure:
        include: "prometheus,health"

scheduler:
  sendkrav:
    cron: "0 */10 * * * *" #Hvert 10. minutt
  behandlingsstatus:
    cron: "0 0 22 * * *" #Hver dag kl 22:00
  avstemning:
    cron: "0 0 1 * * *" #Hver dag kl 01:00
  påløpkjøring:
    cron: "0 5 * * * *" #Hver time 5 minutter over hel

springdoc:
  packages-to-scan: no.nav.bidrag.regnskap.controller
  swagger-ui:
    path: /

maskinporten:
  tokenUrl: ${MASKINPORTEN_ISSUER}token
  audience: ${MASKINPORTEN_ISSUER}
  clientId: ${MASKINPORTEN_CLIENT_ID}
  scope: ${MASKINPORTEN_SCOPES}
  privateKey: ${MASKINPORTEN_CLIENT_JWK}
  validInSeconds: 120 #120 er maks antall sekunder et maskinporten Jwt-token kan være gyldig.

sftp:
  username: srvBidragRegnskap
  host: ${SFTP_HOST}
  port: 22
  privateKey: ${SFTP_PRIVATE_KEY}

spring.config.activate.on-profile: nais

no.nav.security.jwt:
  client:
    registration:
      skatt:
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${SKATT_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
  issuer.aad:
    discovery_url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/v2.0/.well-known/openid-configuration
    accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    consumer:
      auto-offset-reset: earliest
      max-poll-records: 10
      enable-auto-commit: false
    listener:
      ackMode: RECORD

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    database: postgresql
